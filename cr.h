/* AUTOMATICALLY GENERATED by rewrite-cr-header.sh */
#ifndef _LINUX_CHECKPOINT_H_
#include <asm/unistd.h>

#define _LINUX_CHECKPOINT_H_ 
/*
 *  Generic checkpoint-restart
 *
 *  Copyright (C) 2008-2009 Oren Laadan
 *
 *  This file is subject to the terms and conditions of the GNU General Public
 *  License.  See the file COPYING in the main directory of the Linux
 *  distribution for more details.
 */

#define CHECKPOINT_VERSION 2

/* checkpoint user flags */
#define CHECKPOINT_SUBTREE 0x1

/* restart user flags */
#define RESTART_TASKSELF 0x1
#define RESTART_FROZEN 0x2
#define RESTART_GHOST 0x4































/* alpha unsupported. */
/* arm unsupported. */
/* avr32 unsupported. */
/* blackfin unsupported. */
/* cris unsupported. */
/* cris unsupported. */
/* cris unsupported. */
/* frv unsupported. */
/* h8300 unsupported. */
/* ia64 unsupported. */
/* m32r unsupported. */
/* m68k unsupported. */
/* microblaze unsupported. */
/* mips unsupported. */
/* mn10300 unsupported. */
/* parisc unsupported. */
#if __powerpc__

#ifndef __NR_checkpoint
#define __NR_checkpoint 323
#endif

#ifndef __NR_restart
#define __NR_restart 324
#endif

#elif __s390x__

#ifndef __NR_checkpoint
#define __NR_checkpoint 332
#endif

#ifndef __NR_restart
#define __NR_restart 333
#endif

/* sh unsupported. */
/* sh unsupported. */
/* sh unsupported. */
/* sparc unsupported. */
#elif __i386__

#ifndef __NR_checkpoint
#define __NR_checkpoint 338
#endif

#ifndef __NR_restart
#define __NR_restart 339
#endif

/* x86_64 unsupported. */
/* x86_64 unsupported. */
/* xtensa unsupported. */
#endif /* arch-specific sections */
#endif /* _LINUX_CHECKPOINT_H_ */
